#include <WebServer.h>
#include <SPIFFS.h>
#include <Adafruit_NeoPixel.h>

String currStr = "";

WebServer server;

#define LED_PIN 6
#define LED_COUNT 240

Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_RGB + NEO_KHZ800);

const int arr[26][17] = {{1,2,40,43,80,83,120,121,122,123,160,163,200,203,3737,3737,3737},{0,1,2,40,42,80,81,82,120,121,122,160,162,200,201,202,3737},{0,1,2,40,80,120,160,200,201,202,3737,3737,3737,3737,3737,3737,3737},{0,1,2,40,43,80,83,120,123,160,163,200,201,202,3737,3737,3737},{0,1,2,40,80,120,160,161,162,200,201,202,3737,3737,3737,3737,3737},{0,1,2,40,80,120,160,161,162,200,3737,3737,3737,3737,3737,3737,3737},{0,1,2,3,40,80,120,160,200,201,202,203,163,123,122,3737,3737},{0,3,40,43,80,83,120,121,122,123,160,163,200,203,3737,3737,3737},{0,40,80,120,160,200,3737,3737,3737,3737,3737,3737,3737,3737,3737,3737,3737},{3,43,83,123,163,203,202,201,161,121,3737,3737,3737,3737,3737,3737,3737},{0,40,80,120,160,200,3,42,81,121,162,203,3737,3737,3737,3737,3737},{0,40,80,120,160,200,201,202,203,3737,3737,3737,3737,3737,3737,3737,3737},{0,4,40,41,43,44,80,82,84,120,124,160,164,200,204,3737,3737},{0,3,40,41,43,80,82,83,120,123,160,163,200,203,3737,3737,3737},{0,1,2,3,40,43,80,83,120,123,160,163,200,201,202,203,3737},{0,1,2,40,42,80,81,82,120,160,200,3737,3737,3737,3737,3737,3737},{0,1,2,3,40,43,80,83,120,123,160,162,163,200,201,202,203},{0,1,2,40,42,80,81,82,120,121,160,162,200,202,3737,3737,3737},{0,1,2,40,80,81,82,122,162,200,201,202,3737,3737,3737,3737,3737},{0,1,2,3,41,81,121,161,201,3737,3737,3737,3737,3737,3737,3737,3737},{0,2,41,42,80,82,120,122,160,162,201,202,200,3737,3737,3737,3737},{0,2,40,42,80,82,120,122,160,162,201,3737,3737,3737,3737,3737,3737},{0,4,40,44,80,84,120,122,124,160,161,163,164,200,204,3737,3737},{0,3,40,43,81,82,121,122,160,163,200,203,3737,3737,3737,3737,3737},{0,2,40,42,80,81,82,122,162,200,201,202,3737,3737,3737,3737,3737},{0,1,2,3,42,81,120,160,200,201,202,203,3737,3737,3737,3737,3737}};
const int charsW[26] = {4, 3, 3, 4, 3, 3, 4, 4, 1, 4, 4, 4, 5, 4, 4, 3, 4, 3, 3, 4, 3, 3, 5, 4, 3, 4};

bool display[1500+30] = {0};
int pos = 0;

void setString() {
  for (int j = 0; j < currStr.length(); ++j) {
    for (int k = 0; k < 17; ++k) {
      int val = arr[currStr.charAt(j)-'A'][k];
      if (val != 3737) {
        int y = val/40;
        int x = val%40;
        display[y*255+x+pos] = 1;
      }
    }
    pos += charsW[currStr.charAt(j)-'A'];
  }
}

const char* ssid     = "IDK";
const char* password = "Archigymnasium";

void setup() {
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  if (WiFi.waitForConnectResult() != WL_CONNECTED) {
    Serial.println("WiFi Failed!");
    return;
  }
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  if (!SPIFFS.begin(true)) {
    Serial.println("An Error has occurred while mounting SPIFFS");
    while (true);
  }

  strip.begin();
  strip.show();

  currStr = "Hello world!";
  setString();

  server.serveStatic("/", SPIFFS, "/index.html");
  server.on("/get", []() {
    if (server.hasArg("inputString")) {
      currStr = server.arg("inputString");
      setString();
      strip.show();
    }
  });

  server.begin();
}

int cnt = 0;
int i = 0;

void loop() {
  if (cnt++ > 1000) {
    for (int x = 0; x < 40; ++i) {
      for (int y = 0; y < 6; ++y) {
        if (display[(x+i)%(pos+5)+y*255])
          strip.setPixelColor(x+y*40, strip.Color( 255, 0, 0)); 
      }
    }
    i++;
    if (i >= pos+5)
      i = 0;
    cnt = 0;
  }
  server.handleClient();
  delay(1);
}
